# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

# app and org for use with dashboard.serverless.com
org: suitsme
app: cron-jobs
service: cardholder-portal-reporting

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

plugins:
  - serverless-webpack
  # - serverless-dotenv-plugin
  - serverless-iam-roles-per-function

custom:
  stage: ${opt:stage, self:provider.stage}

  webpack:
    webpackConfig: 'webpack.config.js'
    includeModules:
      forceExclude:
        - aws-sdk

    packager: 'npm'
    excludeFiles: '/__tests__/**'

  dotenv:
    required:
      file: false

#Default AWS Setting
provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-west-1
  memorySize: 256
  deploymentBucket:
    maxPreviousDeploymentArtifacts: 5
  vpc:
    subnetIds:
      - subnet-9f9b0de9
      - subnet-0ea2b8c400c6945dc
    securityGroupIds:
      - sg-0939c528adbc20aeb

#Shared env vars
  environment:
    NODE_ENV: ${self:custom.stage}

    DB_HOST: ${env:DB_HOST};
    DB_PORT: ${env:DB_PORT};
    DB_USER: ${env:DB_USER};
    DB_PASS: ${env:DB_PASS};
    DB_NAME: ${env:DB_NAME};

# you can add packaging information here
package:
  individually: true
#   include:
#      - service/lib/**
  exclude:
    - ./__tests__/**
    - ./coverage/**

functions:
  accountcreated1day: ${file(functions/accountcreated1day/config.yml):function}

#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - http:
#          path: users/create
#          method: get
#      - websocket: $connect
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill: amzn1.ask.skill.xx-xx-xx-xx
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp
#      - alb:
#          listenerArn: arn:aws:elasticloadbalancing:us-east-1:XXXXXX:listener/app/my-load-balancer/50dc6c495c0c9188/
#          priority: 1
#          conditions:
#            host: example.com
#            path: /hello

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
